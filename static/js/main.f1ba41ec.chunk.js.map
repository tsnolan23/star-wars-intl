{"version":3,"sources":["constants.js","components/GitHubLink/GitHubLink.js","components/Container/Container.js","components/MovieCard/MovieCard.js","components/MovieList/MovieList.js","components/App/App.js","index.js","utils/flatten-messages.js","messages.js"],"names":["locale","navigator","languages","language","userLanguage","MOVIE_GROSS","1","2","3","4","5","6","octocatWave","keyframes","_templateObject","Link","styled","a","_templateObject2","Svg","_templateObject3","GithubLink","react_default","createElement","href","aria-label","width","height","viewBox","aria-hidden","d","className","fill","Container","_ref","props","Object","esm_extends","assign","injectIntl","movie","intl","title","index_es","id","values","director","amount","value","episodeID","style","currencyDisplay","currency","edited","created","GET_MOVIES","gql","MovieList_templateObject","MovieList","components_Container_Container","react_apollo_esm","query","loading","error","data","concat","message","allFilms","films","map","film","components_MovieCard_MovieCard","key","App","react","components_MovieList_MovieList","GitHubLink","addLocaleData","toConsumableArray","en","es","fr","client","ApolloClient","link","HttpLink","uri","cache","InMemoryCache","ReactDOM","render","messages","flattenMessages","nestedMessages","prefix","arguments","length","undefined","keys","reduce","prefixedKey","en-US","movieList","directedBy","createdOn","lastUpdated","gross","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f1ba41ec.chunk.js","sourcesContent":["export const locale =\n  (navigator.languages && navigator.languages[0]) ||\n  navigator.language ||\n  navigator.userLanguage ||\n  \"en-US\";\n\nexport const MOVIE_GROSS = {\n  1: 431088295,\n  2: 302191252,\n  3: 380270577,\n  4: 307263857,\n  5: 209398025,\n  6: 252583617\n};\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst octocatWave = keyframes`\n  0%,\n  100% {\n    transform: rotate(0);\n  }\n  20%,\n  60% {\n    transform: rotate(-25deg);\n  }\n  40%,\n  80% {\n    transform: rotate(10deg);\n  }\n`;\nconst Link = styled.a`\n  outline: none !important;\n  &:hover .octo-arm {\n    animation: ${octocatWave} 560ms ease-in-out;\n  }\n  & .octo-arm {\n    transform-origin: 130px 106px;\n  }\n  @media screen and (max-width: 500px) {\n    &:hover .octo-arm {\n      animation: none;\n    }\n    & .octo-arm {\n      animation: ${octocatWave} 560ms ease-in-out;\n    }\n  }\n`;\nconst Svg = styled(\"svg\")`\n  z-index: 99;\n  fill: #4886fe;\n  color: #fff;\n  position: absolute;\n  top: 0;\n  border: 0;\n  right: 0;\n`;\n\nconst GithubLink = () => (\n  <Link\n    href=\"https://github.com/tsnolan23/star-wars-intl\"\n    aria-label=\"View source on Github\"\n  >\n    <Svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" aria-hidden=\"true\">\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        className=\"octo-arm\"\n        fill=\"currentColor\"\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      />\n      <path\n        className=\"octo-body\"\n        fill=\"currentColor\"\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      />\n    </Svg>\n  </Link>\n);\n\nexport default GithubLink;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Container = ({ ...props }) => <div className=\"container\" {...props} />;\n\nexport default Container;\n","import React from \"react\";\nimport {\n  FormattedMessage,\n  FormattedDate,\n  FormattedTime,\n  FormattedRelative,\n  FormattedNumber,\n  injectIntl\n} from \"react-intl\";\n\nimport \"./style.css\";\nimport { MOVIE_GROSS } from \"../../constants\";\n\nconst MovieCard = ({ movie, intl }) => (\n  <div className=\"MovieCard\">\n    <h3 className=\"MovieCard__Title\">{movie.title}</h3>\n    <ul>\n      <li>\n        <FormattedMessage\n          id=\"movie.directedBy\"\n          values={{ director: movie.director }}\n        />\n      </li>\n      <li>\n        <FormattedMessage\n          id=\"movie.gross\"\n          values={{\n            amount: (\n              <FormattedNumber\n                value={MOVIE_GROSS[movie.episodeID]}\n                style=\"currency\"\n                currencyDisplay=\"symbol\"\n                currency={intl.locale === \"en-US\" ? \"USD\" : \"EUR\"}\n              />\n            )\n          }}\n        />\n      </li>\n    </ul>\n    <div className=\"MovieCard__Meta\">\n      <div className=\"MovieCard__Updated\">\n        <FormattedMessage id=\"movie.lastUpdated\" />\n        <FormattedRelative value={movie.edited} />\n      </div>\n      <div className=\"MovieCard__Created\">\n        <FormattedMessage id=\"movie.createdOn\" />\n        <FormattedDate value={movie.created} />\n        <span> @ </span>\n        <FormattedTime value={movie.created} />\n      </div>\n    </div>\n  </div>\n);\n\nexport default injectIntl(MovieCard);\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\n\nimport \"./style.css\";\nimport Container from \"../Container\";\nimport MovieCard from \"../MovieCard\";\n\nconst GET_MOVIES = gql`\n  {\n    allFilms {\n      films {\n        episodeID\n        title\n        director\n        created\n        edited\n      }\n    }\n  }\n`;\n\nconst MovieList = () => (\n  <div className=\"MovieList\">\n    <Container>\n      <h1 className=\"MovieList__Title\">\n        <FormattedMessage id=\"movieList.title\" />\n      </h1>\n      <Query query={GET_MOVIES}>\n        {({ loading, error, data }) => {\n          if (loading) return \"Loading...\";\n          if (error) return `Error! ${error.message}`;\n\n          return (\n            <div className=\"MovieList__Movies\">\n              {data.allFilms.films.map(film => (\n                <MovieCard key={film.title} movie={film} />\n              ))}\n            </div>\n          );\n        }}\n      </Query>\n    </Container>\n  </div>\n);\n\nexport default MovieList;\n","import React, { Fragment } from \"react\";\n\nimport GitHubLink from \"../GitHubLink\";\nimport MovieList from \"../MovieList\";\n\nconst App = () => (\n  <Fragment>\n    <MovieList />\n    <GitHubLink />\n  </Fragment>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { addLocaleData, IntlProvider } from \"react-intl\";\nimport { ApolloClient } from \"apollo-client\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport en from \"react-intl/locale-data/en\";\nimport es from \"react-intl/locale-data/es\";\nimport fr from \"react-intl/locale-data/fr\";\n\nimport \"./index.css\";\nimport messages from \"./messages\";\nimport { locale } from \"./constants\";\nimport { flattenMessages } from \"./utils/flatten-messages\";\n\nimport App from \"./components/App\";\n\naddLocaleData([...en, ...es, ...fr]);\n\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: \"https://swapi.apis.guru\" }),\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <IntlProvider locale={locale} messages={flattenMessages(messages[locale])}>\n      <App />\n    </IntlProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n","export function flattenMessages(nestedMessages, prefix = \"\") {\n  return Object.keys(nestedMessages).reduce((messages, key) => {\n    let value = nestedMessages[key];\n    let prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === \"string\") {\n      messages[prefixedKey] = value;\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n}\n","export default {\n  \"en-US\": {\n    movieList: {\n      title: \"Movie List\"\n    },\n    movie: {\n      directedBy: \"Directed by {director}\",\n      createdOn: \"Created on \",\n      lastUpdated: \"Last updated \",\n      gross: \"Grossed {amount} at the box office\"\n    }\n  },\n  es: {\n    movieList: {\n      title: \"Lista de peliculas\"\n    },\n    movie: {\n      directedBy: \"Dirigido por {director}\",\n      createdOn: \"Creado en \",\n      lastUpdated: \"Última actualización \",\n      gross: \"Recaudó {amount} en la taquilla\"\n    }\n  },\n  fr: {\n    movieList: {\n      title: \"Liste de film\"\n    },\n    movie: {\n      directedBy: \"Réalisé par {director}\",\n      createdOn: \"Créé sur \",\n      lastUpdated: \"Dernière mise à jour \",\n      gross: \"Brut {amount} au box-office\"\n    }\n  }\n};\n"],"sourceRoot":""}